/* TWO LEVEL DIRECTORY*/



PROGRAM:

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct {
    char dname[10];
    char fname[10][10];
    int fcnt;
} dir[10];

int main() {
    int i, ch, dcnt = 0, k;
    char f[30], d[30];
    
    while (1) {
        printf("\n\n1. Create Directory\t2. Create File\t3. Delete File");
        printf("\n4. Search File\t\t5. Display\t6. Exit\nEnter your choice: ");
        scanf("%d", &ch);

        switch (ch) {
        case 1:
            if (dcnt < 10) {
                printf("Enter name of directory: ");
                scanf("%s", dir[dcnt].dname);
                dir[dcnt].fcnt = 0;
                dcnt++;
                printf("Directory created\n");
            } else {
                printf("Maximum directories reached.\n");
            }
            break;

        case 2:
            printf("Enter name of the directory: ");
            scanf("%s", d);
            for (i = 0; i < dcnt; i++) {
                if (strcmp(d, dir[i].dname) == 0) {
                    if (dir[i].fcnt < 10) {
                        printf("Enter name of the file: ");
                        scanf("%s", dir[i].fname[dir[i].fcnt]);
                        dir[i].fcnt++;
                        printf("File created\n");
                    } else {
                        printf("Maximum files reached in this directory.\n");
                    }
                    break;
                }
            }
            if (i == dcnt)
                printf("Directory %s not found\n", d);
            break;

        case 3:
            printf("Enter name of the directory: ");
            scanf("%s", d);
            for (i = 0; i < dcnt; i++) {
                if (strcmp(d, dir[i].dname) == 0) {
                    printf("Enter name of the file: ");
                    scanf("%s", f);
                    for (k = 0; k < dir[i].fcnt; k++) {
                        if (strcmp(f, dir[i].fname[k]) == 0) {
                            printf("File %s is deleted\n", f);
                            dir[i].fcnt--;
                            strcpy(dir[i].fname[k], dir[i].fname[dir[i].fcnt]);
                            goto deleted;
                        }
                    }
                    printf("File %s not found\n", f);
                    goto deleted;
                }
            }
            printf("Directory %s not found\n", d);
        deleted:
            break;

        case 4:
            printf("Enter name of the directory: ");
            scanf("%s", d);
            for (i = 0; i < dcnt; i++) {
                if (strcmp(d, dir[i].dname) == 0) {
                    printf("Enter the name of the file: ");
                    scanf("%s", f);
                    for (k = 0; k < dir[i].fcnt; k++) {
                        if (strcmp(f, dir[i].fname[k]) == 0) {
                            printf("File %s is found\n", f);
                            goto found;
                        }
                    }
                    printf("File %s not found\n", f);
                    goto found;
                }
            }
            printf("Directory %s not found\n", d);
        found:
            break;

        case 5:
            if (dcnt == 0) {
                printf("\nNo Directories\n");
            } else {
                printf("\nDirectory\tFiles\n");
                for (i = 0; i < dcnt; i++) {
                    printf("%s\t\t", dir[i].dname);
                    for (k = 0; k < dir[i].fcnt; k++) {
                        printf("%s\t", dir[i].fname[k]);
                    }
                    printf("\n");
                }
            }
            break;

        case 6:
            exit(0);

        default:
            printf("Invalid choice! Please enter a valid option.\n");
        }
    }

    return 0;
}




OUTPUT:


1. Create Directory   2. Create File   3. Delete File
4. Search File        5. Display       6. Exit
Enter your choice -- 1

Enter name of directory: DIR1
Directory created

1. Create Directory   2. Create File   3. Delete File
4. Search File        5. Display       6. Exit
Enter your choice -- 1

Enter name of directory: DIR2
Directory created

1. Create Directory   2. Create File   3. Delete File
4. Search File        5. Display       6. Exit
Enter your choice -- 2

Enter name of the directory: DIR1
Enter name of the file: A1
File created

1. Create Directory   2. Create File   3. Delete File
4. Search File        5. Display       6. Exit
Enter your choice -- 2

Enter name of the directory: DIR1
Enter name of the file: A2
File created

1. Create Directory   2. Create File   3. Delete File
4. Search File        5. Display       6. Exit
Enter your choice -- 2

Enter name of the directory: DIR2
Enter name of the file: B1
File created

1. Create Directory   2. Create File   3. Delete File
4. Search File        5. Display       6. Exit
Enter your choice -- 5

Directory       Files
DIR1            A1    A2
DIR2            B1

1. Create Directory   2. Create File   3. Delete File
4. Search File        5. Display       6. Exit
Enter your choice -- 4

Enter name of the directory: DIR
Directory DIR not found

1. Create Directory   2. Create File   3. Delete File
4. Search File        5. Display       6. Exit
Enter your choice -- 3

Enter name of the directory: DIR1
Enter name of the file: A2
File A2 is deleted

1. Create Directory   2. Create File   3. Delete File
4. Search File        5. Display       6. Exit
Enter your choice -- 6
