ROUND ROBIN
program:

#include <stdio.h>

int main() {
    int i, j, n, bu[10], wa[10], tat[10], t, ct[10], max;
    float awt = 0, att = 0, temp = 0;

    printf("Enter the number of processes -- ");
    scanf("%d", &n);

    for(i = 0; i < n; i++) {
        printf("\nEnter Burst Time for process %d -- ", i + 1);
        scanf("%d", &bu[i]);
        ct[i] = bu[i];  // store original burst time
    }

    printf("\nEnter the size of time slice -- ");
    scanf("%d", &t);

    max = bu[0];
    for(i = 1; i < n; i++) {
        if(max < bu[i])
            max = bu[i];
    }

    // Round Robin Logic
    for(j = 0; j < (max / t) + n; j++) {
        for(i = 0; i < n; i++) {
            if(bu[i] != 0) {
                if(bu[i] <= t) {
                    tat[i] = temp + bu[i];
                    temp += bu[i];
                    bu[i] = 0;
                } else {
                    bu[i] -= t;
                    temp += t;
                }
            }
        }
    }

    for(i = 0; i < n; i++) {
        wa[i] = tat[i] - ct[i];
        att += tat[i];
        awt += wa[i];
    }

    printf("\nThe Average Turnaround Time is -- %.2f", att / n);
    printf("\nThe Average Waiting Time is -- %.2f", awt / n);

    printf("\n\n\tPROCESS\t BURST TIME\t WAITING TIME\t TURNAROUND TIME\n");
    for(i = 0; i < n; i++) {
        printf("\t%d\t     %d\t\t     %d\t\t     %d\n", i + 1, ct[i], wa[i], tat[i]);
    }

    return 0;
}




SAMPLE OUPUT:
Enter the no of processes – 3
Enter Burst Time for process 1 -- 24
Enter Burst Time for process 2 -- 3
Enter Burst Time for process 3 -- 3
Enter the size of time slice – 3
The Average Turnaround time is -- 15.666667
The Average Waiting time is -- 5.666667
PROCESS BURST TIME WAITING TIME TURNAROUND TIME
1 24 6 30
2 3 4 7
3 3 7 10
