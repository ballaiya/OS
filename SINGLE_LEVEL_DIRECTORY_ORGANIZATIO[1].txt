/** SINGLE LEVEL DIRECTORY ORGANIZATION*/


 
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

struct {
    char dname[10], fname[10][10];
    int fcnt;
} dir;

int main() {
    int i, ch;
    char f[30];

    dir.fcnt = 0;
    printf("Enter name of directory -- ");
    scanf("%s", dir.dname);

    while (1) {
        printf("\n\n1. Create File\t2. Delete File\t3. Search File\n4. Display Files\t5. Exit\nEnter your choice -- ");
        scanf("%d", &ch);

        switch (ch) {
            case 1:
                if (dir.fcnt < 10) {
                    printf("Enter the name of the file -- ");
                    scanf("%s", dir.fname[dir.fcnt]);
                    dir.fcnt++;
                } else {
                    printf("Directory is full!\n");
                }
                break;

            case 2:
                printf("Enter the name of the file to delete -- ");
                scanf("%s", f);
                for (i = 0; i < dir.fcnt; i++) {
                    if (strcmp(f, dir.fname[i]) == 0) {
                        printf("File %s is deleted.\n", f);
                        strcpy(dir.fname[i], dir.fname[dir.fcnt - 1]);
                        dir.fcnt--;
                        break;
                    }
                }
                if (i == dir.fcnt) {
                    printf("File %s not found.\n", f);
                }
                break;

            case 3:
                printf("Enter the name of the file to search -- ");
                scanf("%s", f);
                for (i = 0; i < dir.fcnt; i++) {
                    if (strcmp(f, dir.fname[i]) == 0) {
                        printf("File %s is found.\n", f);
                        break;
                    }
                }
                if (i == dir.fcnt) {
                    printf("File %s not found.\n", f);
                }
                break;

            case 4:
                if (dir.fcnt == 0) {
                    printf("Directory is empty.\n");
                } else {
                    printf("The Files are -- ");
                    for (i = 0; i < dir.fcnt; i++) {
                        printf("\t%s", dir.fname[i]);
                    }
                    printf("\n");
                }
                break;

            case 5:
                exit(0);

            default:
                printf("Invalid choice! Try again.\n");
        }
    }

    return 0;
}



OUTPUT:
Enter name of directory -- CSE


1. Create File    2. Delete File    3. Search File
4. Display Files  5. Exit
Enter your choice -- 1
Enter the name of the file -- A


1. Create File    2. Delete File    3. Search File
4. Display Files  5. Exit
Enter your choice -- 1
Enter the name of the file -- B


1. Create File    2. Delete File    3. Search File
4. Display Files  5. Exit
Enter your choice -- 1
Enter the name of the file -- C


1. Create File    2. Delete File    3. Search File
4. Display Files  5. Exit
Enter your choice -- 4
The Files are --     A    B    C


1. Create File    2. Delete File    3. Search File
4. Display Files  5. Exit
Enter your choice -- 3
Enter the name of the file to search -- ABC
File ABC not found.


1. Create File    2. Delete File    3. Search File
4. Display Files  5. Exit
Enter your choice -- 2
Enter the name of the file to delete -- B
File B is deleted.


1. Create File    2. Delete File    3. Search File
4. Display Files  5. Exit
Enter your choice -- 4
The Files are --     A    C


1. Create File    2. Delete File    3. Search File
4. Display Files  5. Exit
Enter your choice -- 5
